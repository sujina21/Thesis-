import { ConversationsMessageAttachmentsInner } from './conversationsMessageAttachmentsInner';
import { ConversationsMessageFile } from './conversationsMessageFile';
import { ConversationsMessageForwardedToSourceStatus } from './conversationsMessageForwardedToSourceStatus';
import { ConversationsMessageFrom } from './conversationsMessageFrom';
import { ConversationsMessageReplyTo } from './conversationsMessageReplyTo';
import { ConversationsMessageToInner } from './conversationsMessageToInner';
export declare class ConversationsMessage {
    'id'?: string;
    'type'?: ConversationsMessage.TypeEnum;
    'text'?: string;
    'subject'?: string;
    'visitorId'?: string;
    'agentId'?: string;
    'agentName'?: string;
    'createdAt'?: number;
    'isPushed'?: boolean;
    'isTrigger'?: boolean;
    'isMissed'?: boolean;
    'isMissedByVisitor'?: boolean;
    'agentUserpic'?: string;
    'receivedFrom'?: string;
    'file'?: ConversationsMessageFile;
    'from'?: ConversationsMessageFrom;
    'to'?: Array<ConversationsMessageToInner>;
    'replyTo'?: ConversationsMessageReplyTo;
    'cc'?: Array<ConversationsMessageToInner>;
    'bcc'?: Array<ConversationsMessageToInner>;
    'sourceMessageId'?: string;
    'forwardedToSourceStatus'?: ConversationsMessageForwardedToSourceStatus;
    'integrations'?: object;
    'isBot'?: boolean;
    'attachments'?: Array<ConversationsMessageAttachmentsInner>;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace ConversationsMessage {
    enum TypeEnum {
        Agent,
        Visitor
    }
}
